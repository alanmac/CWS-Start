@using System.Web.Mvc.Html
@using Umbraco.Web
@using CWSStart.Web.Controllers
@using CWSStart.Web.Models
@model RegisterViewModel

@{
    Html.EnableClientValidation(true);
    Html.EnableUnobtrusiveJavaScript(true);
}

@if (Convert.ToBoolean(TempData["IsSuccessful"]))
{
    <div class="alert alert-success">
        <h4>Yay!</h4>
        <p>You have now registered - please verify your email address to continue</p>
    </div>
}
else
{
    using (Html.BeginUmbracoForm<AuthSurfaceController>("HandleRegister"))
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(false)

        <fieldset>
            <div class="form-group">
                @Html.LabelFor(model => model.Name)
                @Html.TextBoxFor(model => model.Name, new{ @class = "form-control", placeholder = "Your Name" })
                @Html.ValidationMessageFor(model => model.Name)
            </div>
            
            <div class="form-group">
                @Html.LabelFor(model => model.EmailAddress)
                @Html.TextBoxFor(model => model.EmailAddress, new{ @class = "form-control", placeholder = "Email Address" })
                @Html.ValidationMessageFor(model => model.EmailAddress)
            </div>
            
            <div class="form-group">
                @Html.LabelFor(model => model.Password)
                @Html.PasswordFor(model => model.Password, new{ @class = "form-control", placeholder = "Password" })
                @Html.ValidationMessageFor(model => model.Password)
            </div>
        
            <div class="form-group">
                @Html.LabelFor(model => model.ConfirmPassword)
                @Html.PasswordFor(model => model.ConfirmPassword, new{ @class = "form-control", placeholder = "Confirm Password" })
                @Html.ValidationMessageFor(model => model.ConfirmPassword)
            </div>
            
            <button type="submit" class="btn btn-default">Register</button>
        
        </fieldset>
    }
}